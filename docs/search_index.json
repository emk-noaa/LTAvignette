[["destratify.html", " 9 Stratified analysis", " 9 Stratified analysis Field surveys are sometimes stratified such that trackline design and/or density can differ substantially across regions. Also, analysts may sometimes wish to estimate density/abundance for individual regions separately, regardless of design stratification. On the previous page, we demonstrated how to accommodate a stratified analysis by providing an estimates sub-list for each geostratum. For example, in 2002 the Hawaiian EEZ was surveyed with different effort intensity in the Main Hawaiian Islands region compared to pelagic waters. Here is the code that generates density/abundance estimates of striped dolphins in 2002 (stratified) and 2010 (unstratified), with only 10 bootstrap iterations: # Survey data data(&quot;cnp_150km_1986_2020&quot;) cruz &lt;- cnp_150km_1986_2020 # Rg0 table data(&quot;g0_results&quot;) Rg0 &lt;- g0_results # Detection function filters fit_filters &lt;- list(spp = c(&#39;013&#39;, &#39;026&#39;, &#39;031&#39;), pool = &#39;Multi-species pool 1&#39;, cohort = &#39;all&#39;, truncation_distance = 5, other_species = &#39;remove&#39;) # Detection function settings df_settings &lt;- list(covariates = c(&#39;bft&#39;,&#39;lnsstot&#39;,&#39;cruise&#39;,&#39;year&#39;,&#39;ship&#39;,&#39;species&#39;), covariates_factor = c(FALSE, FALSE, TRUE, TRUE, TRUE, TRUE), covariates_levels = 2, covariates_n_per_level = 10, detection_function_base = &#39;hn&#39;, base_model = &#39;~1&#39;, delta_aic = 2) # Estimates estimates &lt;- list( list(spp = &#39;013&#39;, title = &#39;Striped dolphin&#39;, years = 2002, regions = &#39;MHI&#39;), list(spp = &#39;013&#39;, title = &#39;Striped dolphin&#39;, years = 2002, regions = &#39;HI_EEZ&#39;, regions_remove = &#39;MHI&#39;), list(spp = &#39;013&#39;, title = &#39;Striped dolphin&#39;, years = 2010, regions = &#39;HI_EEZ&#39;)) # Run it results &lt;- lta(cruz, Rg0, fit_filters, df_settings, estimates, bootstraps = 10) # Save it locally saveRDS(results, file=&#39;lta/multispecies_pool_1.RData&#39;) Let’s read these results back in using the LTabundR function lta_enlist(), which stores LTA results in a flexible list structure. ltas &lt;- lta_enlist(&#39;lta/&#39;) As these results stand, 2002 estimates are stratified into 2 separate regions: (ltas %&gt;% lta_report(verbose = FALSE))$table4 ## 2002 (HI_EEZ) - (MHI) 2002 ## 1 Species or category Density Abundance CV 95% CI Density ## 2 Striped dolphin 14.2 32,135 0.47 16,707-64,184 12.06 ## (MHI) 2010 (HI_EEZ) ## 1 Abundance CV 95% CI Density Abundance CV 95% CI ## 2 2,557 0.89 0-7,491 23.86 59,051 0.42 45,459-131,350 Now let’s process these LTA results through an LTabundR function, lta_destratify(), which will combine the separate regional estimates from 2002 into a single estimate for the year. ltas_2a &lt;- lta_destratify(ltas, years = 2002, combine_method = &#39;arithmetic&#39;, new_region = &#39;(HI_EEZ)&#39;) ## Destratifying each LTA list ... ## --- LTA object 1 :: species pool Multi-species pool 1 ... ## --- --- estimate title: Striped dolphin ## --- --- --- estimate year: 2002 ## --- --- --- --- multiple regions found. Destratifying ... ## --- --- --- --- calculating N dispersion arithmetically ... ## The new_region argument specifies how to refer to the combined region. In this case we want the 2002 study area to be named the same as the unstratified 2010 study area, hence \"(HI_EEZ)\". The combine_method argument is explained below. Now let’s re-check the summary table: (ltas_2a %&gt;% lta_report(verbose=FALSE))$table4 ## 2002 (HI_EEZ) 2010 (HI_EEZ) ## 1 Species or category Density Abundance CV 95% CI Density Abundance ## 2 Striped dolphin 14.02 34,691 0.82 8,462-142,221 23.86 59,051 ## ## 1 CV 95% CI ## 2 0.42 45,459-131,350 There is now only one set of columns for 2002, and the values therein are combinations of the stratified regions. The “de-stratification” routine within lta_destratify() sums abundance estimates across regions to get combined abundance. To estimate density in the combined regions, the function uses weighted averaging in which the area of a geostratum serves as its weight. To estimate CV and confidence interval of the combined result, the function uses one of two combine_methods (this is an argument in the function). The default method is \"arithmetic\", which uses classic formulae to estimate the combined variance and the corresponding confidence interval. This is done in a way that allows multiple geostrata to be combined, not just two. The second option, \"bootstrap\", uses an iterative method that draws bootstrap samples, with replacement, from the bootstrap estimate of density within each stratified region. ltas_2b &lt;- lta_destratify(ltas, years = 2002, combine_method = &#39;bootstrap&#39;, new_region = &#39;(HI_EEZ)&#39;) ## Destratifying each LTA list ... ## --- LTA object 1 :: species pool Multi-species pool 1 ... ## --- --- estimate title: Striped dolphin ## --- --- --- estimate year: 2002 ## --- --- --- --- multiple regions found. Destratifying ... ## --- --- --- --- calculating N dispersion iteratively ... ## Warning in .recacheSubclasses(def@className, def, env): undefined subclass ## &quot;numericVector&quot; of class &quot;Mnumeric&quot;; definition not updated ## (ltas_2b %&gt;% lta_report(verbose=FALSE))$table4 ## 2002 (HI_EEZ) 2010 (HI_EEZ) ## 1 Species or category Density Abundance CV 95% CI Density Abundance ## 2 Striped dolphin 14.02 34,691 0.41 18,868-80,649 23.86 59,051 ## ## 1 CV 95% CI ## 2 0.42 45,459-131,350 Note that use of lta_destratify() only makes sense if the stratified regions have zero overlap. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
